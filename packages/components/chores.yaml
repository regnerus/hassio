---
# ------------------------------------------------------------------------------
# File: packages/chores.yaml
# Desc: Sensors that are used to track chores
#
# Content:
# 0. YAML anchors
# 1. Input number
# 2. Input datetime
# 3. MQTT sensors
# 4. Scripts
# ------------------------------------------------------------------------------
# 0. Anchors
homeassistant:
  customize:
    package.node_anchors:
      chore_sensor_mqtt_config: &chore_sensor_mqtt_config
        json_attributes_template: '{{ value_json.attributes | tojson }}'
        platform: mqtt
        unit_of_measurement: timestamp
        value_template: '{{ value_json.value }}'
# ------------------------------------------------------------------------------
# 1. Input numbers
input_number:
  # Defines when a chore enters the warning state
  chore_warning:
    min: 1
    max: 100
    step: 1
    unit_of_measurement: 'day(s)'
    mode: box
  # Desinfes when a chore enters the critical state
  chore_critical:
    min: 1
    max: 365
    step: 1
    unit_of_measurement: 'day(s)'
    mode: box
# ------------------------------------------------------------------------------
# 2. Input datetime
input_datetime:
  chore_date:
    has_date: true
    has_time: true
# ------------------------------------------------------------------------------
# 3. MQTT sensors (sorted by rooms)
sensor:
  # Bedroom --------------------------------------------------------------------------------------------------------------------------------
  # Clean floor
  - state_topic: 'home/chores/chores_bedroom_clean_floor'
    name: chores_bedroom_clean_floor
    json_attributes_topic: 'home/chores/chores_bedroom_clean_floor'
    <<: *chore_sensor_mqtt_config
  # Clean dust
  - state_topic: 'home/chores/chores_bedroom_clean_dust'
    name: chores_bedroom_clean_dust
    json_attributes_topic: 'home/chores/chores_bedroom_clean_dust'
    <<: *chore_sensor_mqtt_config
# ------------------------------------------------------------------------------------------------------------------------------------------
# 4. Scripts
script:
  # Update chore value ---------------------------------------------------------------------------------------------------------------------
  # This will update the sensor value (timestamp when the chosre was done) and keep its settings.
  chore_update:
    sequence:
      - data_template:
          topic: '{{ topic }}'
          payload: '{ "value": {{ now().timestamp() | int }}, "attributes": { "critical_after" : {{ critical_after }} , "warning_after": {{ warning_after }} }}'
          retain: true
        service: mqtt.publish
  # Update chore settings ------------------------------------------------------------------------------------------------------------------
  # This will keep the sensor value (timestamp when the chosre was done) and update its settings.
  chore_update_settings:
    sequence:
      - data_template:
          topic: '{{ topic }}'
          payload: '{ "value": {{ states.input_datetime.chore_date.attributes.timestamp | int }}, "attributes": { "warning_after": {{ states.input_number.chore_warning.state | int }}, "critical_after": {{ states.input_number.chore_critical.state | int }} }}'
          retain: true
        service: mqtt.publish
  # Get chore settings ---------------------------------------------------------------------------------------------------------------------
  # This will trigger a popup that displays chore settings and a button to update them.
  chore_get_settings:
    sequence:
    # Set input number value according to chore sensor attributes
    - data_template:
        entity_id: input_number.chore_warning 
        value: '{{ warning_after }}'
      service: input_number.set_value
    - data_template:
        entity_id: input_number.chore_critical 
        value: '{{ critical_after }}'
      service: input_number.set_value
    # Set input date value according to chore sensor value
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.chore_date
        date: >
          {{ choreTs | timestamp_custom("%Y-%m-%d", true) }}
        time: >
          {{ choreTs | timestamp_custom("%H:%M:%S", true) }}
    # Fire a popup that displays chore settings
    - service: browser_mod.popup
      data_template:
        card:
          type: "custom:vertical-stack-in-card"
          cards:
          - type: entities
            entities:
              - entity: input_number.chore_warning
                icon: 'mdi:alert-outline'
                name: 'Alerter après (jours)'
              - entity: input_number.chore_critical
                icon: 'mdi:car-brake-alert'
                name: 'Critique après (jours)'
              - entities:
                  - entity: input_datetime.chore_date
                    name: 'Effectué le'
                head:
                  type: section
                  label: Réglages avancés
                type: custom:fold-entity-row
          - type: "custom:button-card"
            name: 'Mise à jour de la tâche'
            show_name: true
            tap_action:
              action: call-service
              service: script.chore_update_settings
              service_data:
                topic: '{{ topic }}'
        title: "Paramétrer une tâche"
        deviceID: ["{{ ','.join(deviceID) }}"]